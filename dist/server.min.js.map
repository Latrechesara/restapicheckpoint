{"version":3,"sources":["server.js"],"names":["require","config","express","mongoose","app","useNewUrlParser","then","console","log","err","error","req","res","connect","get","find","users","json","regeneratorRuntime","async","_context2","prev","next","awrap","User","sent","stop","post","_req$body","name","email","password","user","_context3","body","save","put","id","_req$body2","_context4","params","findByIdAndUpdate","new","_context5","findByIdAndDelete","message","PORT","process","env","listen","concat"],"mappings":"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","file":"server.min.js","sourcesContent":["const { config } = require('dotenv');\r\nconst express =require(\"express\")\r\nconst mongoose = require('mongoose');\r\nconst User = require('./models/User');\r\n\r\n\r\nconst app = express();\r\nmongoose.connect('mongodb://localhost:3000/userdb', { useNewUrlParser: true })\r\n  .then(() => console.log('Connected to MongoDB'))\r\n  .catch(err => console.error('Could not connect to MongoDB', err));\r\n\r\napp.get('/', function (req, res) {\r\n  res.send('Hello World!');\r\n});\r\n\r\napp.get('/users', async (req, res) => {\r\n    const users = await User.find();\r\n    res.json(users);\r\n});\r\n\r\n// GET all users\r\napp.get('/users', async (req, res) => {\r\n    const users = await User.find();\r\n    res.json(users);\r\n  });\r\n  \r\n  // POST add new user\r\n  app.post('/users', async (req, res) => {\r\n    const { name, email, password } = req.body;\r\n    const user = new User({ name, email, password });\r\n    await user.save();\r\n    res.json(user);\r\n  });\r\n  \r\n  // PUT edit user by ID\r\n  app.put('/users/:id', async (req, res) => {\r\n    const { id } = req.params;\r\n    const { name, email, password } = req.body;\r\n    const user = await User.findByIdAndUpdate(id, { name, email, password }, { new: true });\r\n    res.json(user);\r\n  });\r\n  \r\n  // DELETE remove user by ID\r\n  app.delete('/users/:id', async (req, res) => {\r\n    const { id } = req.params;\r\n    await User.findByIdAndDelete(id);\r\n    res.json({ message: 'User deleted' });\r\n  });\r\n  \r\n  const PORT = process.env.PORT || 3000;\r\n \r\n \r\n  \r\n  \r\n  \r\n\r\n\r\napp.listen(PORT, function () {\r\n  console.log(`Server started on port ${PORT}`);\r\n});"]}