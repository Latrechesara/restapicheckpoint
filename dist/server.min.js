"use strict";var _require=require("dotenv"),config=_require.config,express=require("express"),mongoose=require("mongoose"),User=require("./models/User"),app=express();mongoose.connect("mongodb://localhost:3000/userdb",{useNewUrlParser:!0}).then(function(){return console.log("Connected to MongoDB")}).catch(function(e){return console.error("Could not connect to MongoDB",e)}),app.get("/",function(e,r){r.send("Hello World!")}),app.get("/users",function(e,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(User.find());case 2:n=e.sent,r.json(n);case 4:case"end":return e.stop()}})}),app.get("/users",function(e,r){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(User.find());case 2:n=e.sent,r.json(n);case 4:case"end":return e.stop()}})}),app.post("/users",function(r,n){var t,s,o,a,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.body,s=t.name,o=t.email,a=t.password,c=new User({name:s,email:o,password:a}),e.next=4,regeneratorRuntime.awrap(c.save());case 4:n.json(c);case 5:case"end":return e.stop()}})}),app.put("/users/:id",function(r,n){var t,s,o,a,c,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.params.id,s=r.body,o=s.name,a=s.email,c=s.password,e.next=4,regeneratorRuntime.awrap(User.findByIdAndUpdate(t,{name:o,email:a,password:c},{new:!0}));case 4:u=e.sent,n.json(u);case 6:case"end":return e.stop()}})}),app.delete("/users/:id",function(r,n){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.params.id,e.next=3,regeneratorRuntime.awrap(User.findByIdAndDelete(t));case 3:n.json({message:"User deleted"});case 4:case"end":return e.stop()}})});var PORT=process.env.PORT||3e3;app.listen(PORT,function(){console.log("Server started on port ".concat(PORT))});
//# sourceMappingURL=server.min.js.map
